{"version":3,"file":"static/js/235.80d8f299.chunk.js","mappings":"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","sources":["components/SavedMovie.jsx","components/SingleMovie.jsx","custom-hooks/useFavoriteMovie.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { db } from \"../firebase\";\r\nimport { doc, updateDoc, arrayUnion} from \"firebase/firestore\";\r\nimport { UserAuth } from \"../context/authContext\";\r\nimport { toast } from \"react-toastify\";\r\nconst SavedMovie = () => {\r\n  const { user } = UserAuth();\r\n  const [like, setLike] = useState(false);\r\n  const movieRef = doc(db, \"users\", `${user?.email}`);\r\n  const myFavorites = async (item) => {\r\n    if (user?.email) {\r\n      setLike(true);\r\n      await updateDoc(movieRef, {\r\n        savedMovies: arrayUnion({\r\n          id: item.id,\r\n          title: item.title,\r\n          img: item.backdrop_path,\r\n        }),\r\n      });\r\n    } else {\r\n      toast.info(\"Please log in first to save a movie\");\r\n    }\r\n  };\r\n  return { like, setLike, myFavorites };\r\n};\r\nexport default SavedMovie;\r\n","import { useState } from \"react\";\r\nimport { TfiEye } from \"react-icons/tfi\";\r\nimport { MdFavoriteBorder, MdFavorite } from \"react-icons/md\";\r\nimport { motion } from \"framer-motion\";\r\nimport { images } from \"../api\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport NoImage from \"../assets/no-image01.jpg\";\r\nimport SavedMovie from \"./SavedMovie\";\r\nimport useFavoriteMovie from \"../custom-hooks/useFavoriteMovie\";\r\nconst SingleMovie = ({ movie, styles }) => {\r\n  const {favoriteMovie} = useFavoriteMovie(movie)\r\n  const { like, myFavorites } = SavedMovie();\r\n  const [isHover, setIsHover] = useState(false);\r\n  const navigate = useNavigate();\r\n  const variants = {\r\n    hover: {\r\n      scale: 1.2,\r\n    },\r\n    initial: {\r\n      scale: 1,\r\n    },\r\n  };\r\n  return (\r\n    <div\r\n      className={`flex justify-center border-border border-[1px] rounded-md overflow-hidden ${styles}`}\r\n      onMouseEnter={() => setIsHover(true)}\r\n      onMouseLeave={() => setIsHover(false)}\r\n    >\r\n      <div className={`h-90 w-[200px] md:w-[240px] relative ${styles}`}>\r\n        <div className=\"h-full w-full\">\r\n          <motion.img\r\n            className=\"h-full w-full \"\r\n            variants={variants}\r\n            animate={isHover ? \"hover\" : \"initial\"}\r\n            transition={{ duration: 0.5 }}\r\n            src={\r\n              movie.poster_path\r\n                ? `${images}original/${movie?.poster_path}`\r\n                : NoImage\r\n            }\r\n            alt={movie?.title}\r\n            loading=\"lazy\"\r\n          />\r\n        </div>\r\n        <div className=\"group/item bg-blackColor/0 hover:bg-blackColor/60 transition-all duration-[0.5s] delay-[0.1s] w-full h-full absolute top-0 left-0 flex items-center justify-center gap-x-4\">\r\n          <motion.i\r\n            whileHover={{ scale: 1.2 }}\r\n            className=\"opacity-0 group-hover/item:opacity-100 transition-opacity delay-[0.1s]\"\r\n            onClick={() => navigate(`/movie/${movie.id}`)}\r\n          >\r\n            <TfiEye className=\"cursor-pointer text-lightColor text-[28px]\" />\r\n          </motion.i>\r\n          <motion.i\r\n            whileHover={{ scale: 1.2 }}\r\n            className=\"opacity-0 group-hover/item:opacity-100 cursor-pointer text-[28px] transition-opacity delay-[0.1s]\"\r\n            onClick={() => myFavorites(movie)}\r\n          >\r\n            {like || favoriteMovie ? (\r\n              <MdFavorite className=\"text-main\" />\r\n            ) : (\r\n              <MdFavoriteBorder className=\"text-lightColor\" />\r\n            )}\r\n          </motion.i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default SingleMovie;\r\n","import { doc, getDoc } from \"firebase/firestore\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { db } from \"../firebase\";\r\nimport { UserAuth } from \"../context/authContext\";\r\n\r\nconst useFavoriteMovie = (movie) => {\r\n  const { user } = UserAuth();\r\n  const [favoriteMovie, setFavoriteMovie] = useState(false);\r\n  useEffect(() => {\r\n    const getSavedMovies = async () => {\r\n      if (user?.email) {\r\n        const docSnap = await getDoc(doc(db, \"users\", `${user?.email}`));\r\n        const moviesData = await docSnap\r\n          .data()\r\n          .savedMovies.find((m) => m.id === movie.id);\r\n        moviesData ? setFavoriteMovie(true) : setFavoriteMovie(false);\r\n      } else {\r\n        setFavoriteMovie(false);\r\n      }\r\n    };\r\n    getSavedMovies();\r\n  }, [user?.email, movie.id]);\r\n  return { favoriteMovie };\r\n};\r\n\r\nexport default useFavoriteMovie;\r\n"],"names":["user","UserAuth","_useState","useState","_useState2","_slicedToArray","like","setLike","movieRef","doc","db","concat","email","myFavorites","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","item","wrap","_context","prev","next","updateDoc","savedMovies","arrayUnion","id","title","img","backdrop_path","toast","stop","_x","apply","arguments","movie","styles","favoriteMovie","useFavoriteMovie","_SavedMovie","SavedMovie","isHover","setIsHover","navigate","useNavigate","_jsx","className","onMouseEnter","onMouseLeave","children","_jsxs","motion","variants","hover","scale","initial","animate","transition","duration","src","poster_path","images","NoImage","alt","loading","whileHover","onClick","TfiEye","MdFavorite","MdFavoriteBorder","setFavoriteMovie","useEffect","getSavedMovies","docSnap","moviesData","getDoc","sent","data","find","m"],"sourceRoot":""}