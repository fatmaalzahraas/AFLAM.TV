{"version":3,"file":"static/js/410.d2f11a8b.chunk.js","mappings":"0OAOMA,EAAa,WACjB,IACMC,GADaC,EAAAA,EAAAA,MAAXC,OACkBC,MAAM,GAChCC,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAAsCL,EAAAA,EAAAA,UAAS,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAAoCT,EAAAA,EAAAA,UAAS,GAAEU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAxCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAA8Bb,EAAAA,EAAAA,WAAS,GAAMc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAkB1B,OAjBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACF,OAAjBb,GAAW,GAAMW,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEQC,EAAAA,GAAAA,IAAU,wBAADC,OACNC,EAAAA,GAAO,yBAAAD,OAAwBxB,EAAW,+BAAAwB,OAA8BpC,IAChG,KAAD,EAAA6B,EAAAG,EAAAM,KAFOR,EAAID,EAAJC,KAGRrB,EAAc,OAAJqB,QAAI,IAAJA,OAAI,EAAJA,EAAMS,SAChBtB,EAAkB,OAAJa,QAAI,IAAJA,OAAI,EAAJA,EAAMU,aACpBnB,GAAW,GAAOW,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAS,GAAAT,EAAA,SAElBX,GAAW,GACXqB,QAAQC,IAAGX,EAAAS,IAAM,yBAAAT,EAAAY,OAAA,GAAAhB,EAAA,mBAEpB,kBAbiB,OAAAJ,EAAAqB,MAAA,KAAAC,UAAA,KAclBvB,GACF,GAAG,CAACX,EAAaZ,KAEf+C,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACC,MAAM,4BAA2BC,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0DAAyDF,UACtEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mCAAkCF,UAC7CC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wMAAuMF,SAClN9B,GAAUiC,EAAAA,EAAAA,GAAIC,MAAM,IAAIC,QAAQC,KAAI,SAAAC,GAAC,OAAIN,EAAAA,EAAAA,KAACO,EAAAA,EAAe,GAAMD,EAAK,IAAsB,IAAlBjD,EAAOmD,QAC/ER,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qDAAoDF,UACjEC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,iEAAgEF,SAAC,2EAMjF1C,EAAOgD,KAAI,SAACI,GAAK,OACfT,EAAAA,EAAAA,KAACU,EAAAA,QAAW,CACVD,MAAOA,EACPE,OAAO,0DACFF,EAAMG,GACX,UAObvD,EAAOmD,OAAS,GAAK3C,EAAa,IACjCmC,EAAAA,EAAAA,KAACa,EAAAA,EAAU,CACTpD,YAAaA,EACbC,eAAgBA,EAChBG,WAAYA,MAKtB,EAEA,WAAeiD,EAAAA,EAAAA,MAAKlE,E","sources":["pages/SearchPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, memo } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport axios, { API_KEY } from \"../api\";\r\nimport SingleMovie from \"../components/SingleMovie\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport PageTitle from \"../components/PageTitle\";\r\nimport LoadingSkeleton from \"../components/LoadingSkeleton\";\r\nconst SearchPage = () => {\r\n  const { search } = useLocation();\r\n  const searchTerm = search.slice(3);\r\n  const [movies, setMovies] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n    const fetchResults = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const { data } = await axios.get(\r\n          `search/movie?api_key=${API_KEY}&language=en-US&page=${currentPage}&include_adult=false&query=${searchTerm}`\r\n        );\r\n        setMovies(data?.results);\r\n        setTotalPages(data?.total_pages);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setLoading(false);\r\n        console.log(err);\r\n      }\r\n    }\r\n    fetchResults();\r\n  }, [currentPage, searchTerm]);\r\n  return (\r\n    <PageTitle title=\"Search any movie you want\">\r\n      <div className=\"w-full bg-lightColor dark:bg-darkBlue searchPage-height\">\r\n        <div className=\"container px-[15px] py-4 mx-auto\">\r\n            <div className=\"grid xxs:justify-items-center xxs:grid-cols-2 xs:grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 2xl:grid-cols-6 gap-y-[1.2rem] xs:gap-x-[1.5rem] xxs:gap-x-[1.1rem] mb-[1.3rem] mt-[1.3rem]\">\r\n              { loading ? [...Array(20).keys()].map(i => <LoadingSkeleton key={i} />) : movies.length === 0 ? (\r\n                <div className=\"w-full col-span-full flex justify-center mt-[3rem]\">\r\n                  <h2 className=\"text-darkBlue dark:text-lightColor text-[1.2rem] font-semibold\">\r\n                    Sorry, there are no results here. Please try again using\r\n                    other words\r\n                  </h2>\r\n                </div>\r\n              ) : (\r\n                movies.map((movie) => (\r\n                  <SingleMovie\r\n                    movie={movie}\r\n                    styles=\"h-90 xxs:w-[138px] w-[190px] md:w-[230px] lg:w-[240px]\"\r\n                    key={movie.id}\r\n                  />\r\n                ))\r\n              )}\r\n            </div>\r\n          \r\n        </div>\r\n      </div>\r\n      {movies.length > 0 && totalPages > 1 && (\r\n        <Pagination\r\n          currentPage={currentPage}\r\n          setCurrentPage={setCurrentPage}\r\n          totalPages={totalPages}\r\n        />\r\n      )}\r\n    </PageTitle>\r\n  );\r\n};\r\n\r\nexport default memo(SearchPage);\r\n"],"names":["SearchPage","searchTerm","useLocation","search","slice","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","currentPage","setCurrentPage","_useState5","_useState6","totalPages","setTotalPages","_useState7","_useState8","loading","setLoading","useEffect","fetchResults","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","axios","concat","API_KEY","sent","results","total_pages","t0","console","log","stop","apply","arguments","_jsxs","PageTitle","title","children","_jsx","className","_toConsumableArray","Array","keys","map","i","LoadingSkeleton","length","movie","SingleMovie","styles","id","Pagination","memo"],"sourceRoot":""}