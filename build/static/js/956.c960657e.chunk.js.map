{"version":3,"file":"static/js/956.c960657e.chunk.js","mappings":"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","sources":["components/Genres.jsx","pages/AllMovies.jsx"],"sourcesContent":["import { memo, useEffect } from \"react\";\r\nimport axios, { API_KEY } from \"../api\";\r\nconst Genres = memo(({ genres, setGenres, selectedGenres, setSelectedGenres }) => {\r\n  const handleSelectedGenres = (genre) => {\r\n    setSelectedGenres([...selectedGenres, genre]);\r\n    setGenres(genres?.filter((g) => g.id !== genre?.id));\r\n  }\r\n  const handleRemoveGenres = (genre) => {\r\n    setSelectedGenres(selectedGenres?.filter((g) => g.id !== genre?.id));\r\n    setGenres([...genres, genre]);\r\n  };\r\n  useEffect(() => {\r\n    const fetchGenres = async () => {\r\n      try {\r\n        const { data } = await axios.get(\r\n          `genre/movie/list?api_key=${API_KEY}&language=en-US`\r\n        );\r\n        setGenres(data?.genres);\r\n      } catch (err) {\r\n        console.log(err.message);\r\n      }\r\n    }\r\n    fetchGenres()\r\n  }, [setGenres]);\r\n  return (\r\n    <div className=\"bg-lightColor dark:bg-darkBlue\">\r\n      <div className=\"container mx-auto px-[15px] py-5\">\r\n        <div className=\"\">\r\n          <ul className=\"flex items-center gap-x-[0.7rem] flex-wrap\">\r\n            {selectedGenres?.map((genre, idx) => {\r\n              return (\r\n                <li\r\n                  key={`${genre.id}-${idx}`}\r\n                  className=\"mb-[0.8rem] xxs:mb-[0.5rem] bg-lightBlue text-lightColor font-semibold dark:text-darkBlue xxs:text-[0.7rem] text-[0.9rem] xxs:px-[0.4rem] px-[0.6rem] xxs:py-[0.2rem] py-[0.3rem] rounded-[20px] \"\r\n                >\r\n                  {genre.name}{\" \"}\r\n                  <span\r\n                    className=\"bg-main/80 text-darkColor rounded-[30px] px-[0.4rem] text-[0.8rem] ml-[0.5rem] cursor-pointer font-medium\"\r\n                    onClick={() => handleRemoveGenres(genre)}\r\n                  >\r\n                    X\r\n                  </span>\r\n                </li>\r\n              );\r\n            })}\r\n            {genres?.map((genre, idx) => (\r\n              <li\r\n                key={`${genre.id}-${idx}`}\r\n                className=\"mb-[0.8rem] xxs:mb-[0.5rem] bg-darkBlue dark:bg-lightColor text-lightColor xxs:text-[0.8rem] dark:text-darkBlue cursor-pointer xxs:px-[0.6rem] xxs:py-[0.3rem] px-[0.7rem] py-[0.5rem] rounded-[20px] font-medium\"\r\n                onClick={() => {\r\n                  handleSelectedGenres(genre);\r\n                }}\r\n              >\r\n                {genre.name}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Genres;\r\n","import { useEffect, useState } from \"react\";\r\nimport Genres from \"../components/Genres\";\r\nimport axios, { API_KEY } from \"../api\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport PageTitle from \"../components/PageTitle\";\r\nimport LoadingSkeleton from \"../components/LoadingSkeleton\";\r\nimport SingleMovie from \"../components/SingleMovie\";\r\nconst AllMovies = () => {\r\n  const [genres, setGenres] = useState([]);\r\n  const [movies, setMovies] = useState([]);\r\n  const [selectedGenres, setSelectedGenres] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [err, setErr] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const genresIDs = (specifiedGenres) => {\r\n    if (specifiedGenres.length < 1) {\r\n      return \"\";\r\n    } else {\r\n      const genreId = specifiedGenres?.map((genre) => genre.id);\r\n      return genreId.reduce((acc, cur) => acc + \",\" + cur);\r\n    }\r\n  };\r\n  const genresIds = genresIDs(selectedGenres);\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      setLoading(true)\r\n      try {\r\n        const { data } = await axios.get(\r\n          `discover/movie?api_key=${API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${currentPage}&with_genres=${genresIds}`\r\n        );\r\n        setMovies(data?.results);\r\n        setTotalPages(data?.total_pages);\r\n        setLoading(false)\r\n      } catch (error) {\r\n        setErr(true);\r\n        setLoading(false)\r\n        console.log(error);\r\n      }\r\n    }\r\n    fetchMovies()\r\n  }, [currentPage, genresIds]);\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n  return (\r\n    <>\r\n      {err ? (\r\n        <div className=\"h-screen bg-lightColor dark:bg-darkBlue flex justify-center items-center\">\r\n          <h2 className=\"text-[1.2rem] font-semibold text-main\">\r\n            Sorry, Something Went Wrong!\r\n          </h2>\r\n        </div>\r\n      ) : (\r\n        <PageTitle title=\"All-Movies\">\r\n          <Genres\r\n            genres={genres}\r\n            setGenres={setGenres}\r\n            selectedGenres={selectedGenres}\r\n            setSelectedGenres={setSelectedGenres}\r\n          />\r\n          <div className=\"w-full bg-lightColor dark:bg-darkBlue height-screen\">\r\n            <div className=\"container px-[15px] py-4 mx-auto\">\r\n              <div className=\"grid xxs:justify-items-center xxs:grid-cols-2 xs:grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 2xl:grid-cols-6 gap-y-[1.2rem] xs:gap-x-[1.5rem] xxs:gap-x-[1.1rem] mb-[1.3rem]\">\r\n                \r\n                  {loading? [...Array(20).keys()].map(i => <LoadingSkeleton key={i} />) :   movies.length === 0 ? (\r\n                    <div className=\"w-full col-span-full flex justify-center mt-[3rem]\">\r\n                      <h2 className=\"text-darkBlue dark:text-lightColor text-[1.2rem] font-semibold\">\r\n                        Sorry, there are no results here.\r\n                      </h2>\r\n                    </div>\r\n                  ) : (\r\n                    movies?.map((movie, idx) => (\r\n                      <SingleMovie\r\n                        movie={movie}\r\n                        styles=\"h-90 xxs:w-[138px] w-[190px] md:w-[228px] lg:w-[240px]\"\r\n                        key={`${movie.id}-${idx}`}\r\n                      />\r\n                    ))\r\n                  )}\r\n                \r\n              </div>\r\n            </div>\r\n          </div>\r\n          {movies.length > 0 && totalPages > 1 && (\r\n            <Pagination\r\n              currentPage={currentPage}\r\n              setCurrentPage={setCurrentPage}\r\n              totalPages={totalPages}\r\n            />\r\n          )}\r\n        </PageTitle>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default AllMovies;\r\n"],"names":["Genres","memo","_ref","genres","setGenres","selectedGenres","setSelectedGenres","useEffect","fetchGenres","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","axios","concat","API_KEY","sent","t0","console","log","message","stop","apply","arguments","_jsx","className","children","_jsxs","map","genre","idx","name","onClick","filter","g","id","_toConsumableArray","handleRemoveGenres","handleSelectedGenres","specifiedGenres","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","movies","setMovies","_useState5","_useState6","_useState7","_useState8","currentPage","setCurrentPage","_useState9","_useState10","totalPages","setTotalPages","_useState11","_useState12","err","setErr","_useState13","_useState14","loading","setLoading","genresIds","length","reduce","acc","cur","fetchMovies","results","total_pages","window","scrollTo","_Fragment","PageTitle","title","Array","keys","i","LoadingSkeleton","movie","SingleMovie","styles","Pagination"],"sourceRoot":""}