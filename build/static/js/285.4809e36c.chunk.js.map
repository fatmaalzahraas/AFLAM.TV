{"version":3,"file":"static/js/285.4809e36c.chunk.js","mappings":"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","sources":["components/PageTitle.jsx","pages/Register.jsx","validation.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\n\r\nconst PageTitle = ({ children, title }) => {\r\n  useEffect(() => {\r\n    document.title = `AFLAM.TV | ${title ? title : \"Watch Movies\"}`;\r\n  }, [title])\r\n  return <div>{children}</div>;\r\n};\r\n\r\nexport default PageTitle;\r\n","import { useEffect, useState } from \"react\";\r\nimport Image from \"../assets/aflam02.jpg\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { UserAuth } from \"../context/authContext\";\r\nimport zxcvbn from \"zxcvbn\";\r\nimport validation from \"../validation\";\r\nimport { AiFillEye, AiFillEyeInvisible } from \"react-icons/ai\";\r\nimport PageTitle from \"../components/PageTitle\";\r\nimport { doc, setDoc } from \"firebase/firestore\";\r\nimport { db } from \"../firebase\";\r\nconst Signup = () => {\r\n  const { user, signUp } = UserAuth();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errors, setErrors] = useState({});\r\n  const [showPass, setShowPass] = useState(false);\r\n  const navigate = useNavigate();\r\n  const testPassword = zxcvbn(password);\r\n  const scoreNum = (testPassword.score * 100) / 4;\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setErrors(validation(email, password));\r\n    try {\r\n        await signUp(email, password);\r\n        await setDoc(doc(db, 'users', email), {\r\n          savedMovies: []\r\n      })\r\n        navigate(\"/\");\r\n        setEmail(\"\");\r\n        setPassword(\"\"); \r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  };\r\n  const progressColor = () => {\r\n    switch (testPassword.score) {\r\n      case 0:\r\n        return \"#828282\";\r\n      case 1:\r\n        return \"#EA1111\";\r\n      case 2:\r\n        return \"#FFAD00\";\r\n      case 3:\r\n        return \"#9bc158\";\r\n      case 4:\r\n        return \"#00b500\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n  const createPassLabel = () => {\r\n    switch (testPassword.score) {\r\n      case 0:\r\n        return \"Very Weak\";\r\n      case 1:\r\n        return \"Weak\";\r\n      case 2:\r\n        return \"Fair\";\r\n      case 3:\r\n        return \"Strong\";\r\n      case 4:\r\n        return \"Very Strong\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n  const changePassColor = () => ({\r\n    width: `${scoreNum}%`,\r\n    backgroundColor: progressColor(),\r\n  });\r\n  useEffect(() => {\r\n    if (user) {\r\n      navigate(\"/\");\r\n    }\r\n  }, [navigate, user]);\r\n  return (\r\n    <PageTitle title=\"Sign Up\">\r\n      <div className=\"h-screen w-full relative\">\r\n        <img\r\n          className=\" absolute w-full h-full object-cover\"\r\n          src={Image}\r\n          alt=\"/\"\r\n        />\r\n        <div className=\" absolute w-full h-screen top-0 left-0 bg-darkBlue/50 dark:bg-darkBlue/60\"></div>\r\n        <div className=\"absolute top-[50%] translate-y-[-50%] z-40 w-full\">\r\n          <div className=\" max-w-[450px] min-h-[600px] mx-auto text-lightColor bg-darkBlue/80 xxs:h-[460px]\">\r\n            <div className=\"max-w-[300px] xxs:max-w-[250px] mx-auto py-14\">\r\n              <h2 className=\"text-[1.2rem] sm:text-[1.5rem] font-bold\">Sign Up</h2>\r\n              <form\r\n                className=\"flex flex-col w-full py-4 xxs:py-2\"\r\n                onSubmit={handleSubmit}\r\n              >\r\n                <input\r\n                  className=\"py-2 sm:py-3 my-2 px-1 rounded  bg-lightColor text-darkBlue\"\r\n                  type=\"text\"\r\n                  placeholder=\"Email\"\r\n                  autoComplete=\"email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                {errors.email && (\r\n                  <span className=\"text-main text-[0.8rem] mt-[0.2rem]\">\r\n                    {errors.email}\r\n                  </span>\r\n                )}\r\n                <div className=\"relative w-full\">\r\n                  <input\r\n                    className=\"py-2 sm:py-3 mt-2 px-1 rounded bg-lightColor text-darkBlue w-full\"\r\n                    type={showPass ? \"text\" : \"password\"}\r\n                    maxLength={25}\r\n                    placeholder=\"Password\"\r\n                    autoComplete=\"current-password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  />\r\n                  <div className=\"absolute top-[58%] translate-y-[-50%] right-[3px] z-20 cursor-pointer text-[1.4rem]\">\r\n                    {showPass ? (\r\n                      <AiFillEye\r\n                        className=\"text-darkBlue \"\r\n                        onClick={() => setShowPass(false)}\r\n                      />\r\n                    ) : (\r\n                      <AiFillEyeInvisible\r\n                        className=\"text-darkBlue\"\r\n                        onClick={() => setShowPass(true)}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"w-full h-1 bg-transparent mt-1 rounded\">\r\n                  <div\r\n                    className=\"h-full transition-colors duration-[0.5s]\"\r\n                    style={changePassColor()}\r\n                  ></div>\r\n                </div>\r\n                <p\r\n                  className=\"text-right text-[0.8rem] mt-1\"\r\n                  style={{ color: `${progressColor()}` }}\r\n                >\r\n                  {createPassLabel()}\r\n                </p>\r\n                {errors.password && (\r\n                  <span className=\"text-main text-[0.8rem] mt-[0.2rem]\">\r\n                    {errors.password}\r\n                  </span>\r\n                )}\r\n                <button className=\"bg-main py-2 sm:py-3 my-6 rounded font-bold disabled:bg-main/40 cursor-pointer\">\r\n                  Sign Up\r\n                </button>\r\n                <div className=\"flex justify-between items-center text-[0.9rem] text-gray-500\">\r\n                  <p>\r\n                    <input type=\"checkbox\" className=\"mr-1\" /> Remember me\r\n                  </p>\r\n                  <p className=\"xxs:text-[0.85rem] xs:text-[0.85rem]\">Need Help?</p>\r\n                </div>\r\n                <p className=\"py-8\">\r\n                  <span className=\"text-gray-500 text-[0.85rem] sm:text-[0.9rem]\">\r\n                    Already have an account?\r\n                  </span>{\" \"}\r\n                  {\"   \"}\r\n                  <Link to=\"/login\" className=\"xxs:text-[0.85rem] xs:text[0.85rem]\">Sign In</Link>\r\n                </p>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </PageTitle>\r\n  );\r\n};\r\nexport default Signup;\r\n","const validation = (email, password) => {\r\n  let errors = {};\r\n  const emailRegx = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  if (email === \"\") {\r\n    errors.email = \"Email must not be empty!\";\r\n  } else if (!emailRegx.test(email)) {\r\n    errors.email = \"Email not valid\";\r\n  }\r\n  if (password === \"\") {\r\n    errors.password = \"Password must not be empty!\";\r\n  } else if (password.length < 6 || password.length > 25) {\r\n    errors.password =\r\n      \"password must be at least 6 characters and no more than 25 characters\";\r\n  }\r\n  return errors;\r\n};\r\nexport default validation;\r\n"],"names":["_ref","children","title","useEffect","document","concat","_jsx","_UserAuth","UserAuth","user","signUp","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","errors","setErrors","_useState7","_useState8","showPass","setShowPass","navigate","useNavigate","testPassword","zxcvbn","scoreNum","score","handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","wrap","_context","prev","next","preventDefault","validation","setDoc","doc","db","savedMovies","t0","console","log","message","stop","_x","apply","arguments","progressColor","PageTitle","_jsxs","className","src","Image","alt","onSubmit","type","placeholder","autoComplete","value","onChange","target","maxLength","AiFillEye","onClick","AiFillEyeInvisible","style","width","backgroundColor","color","createPassLabel","Link","to","test","length"],"sourceRoot":""}